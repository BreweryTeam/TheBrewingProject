buildscript {
    configurations.all {
        resolutionStrategy {
            force("com.fasterxml.jackson.core:jackson-core:2.18.2")
        }
    }
}

plugins {
    `java-library`
    id("net.neoforged.gradle.common") version "7.0.181"
    id("org.ajoberstar.grgit") version "5.3.0"
}

group = "dev.jsinco.brewery"
version = "1.3.0-" + grgit.head().abbreviatedId

repositories {
    mavenCentral()
    maven("https://jitpack.io")
}

dependencies {
    implementation("com.github.Carleslc.Simple-YAML:Simple-Yaml:1.8.4")
    implementation("com.zaxxer:HikariCP:6.2.1")
    api(project(":api"))
    compileOnly("org.xerial:sqlite-jdbc:3.47.2.0")

    compileOnly("org.jetbrains:annotations:24.0.0")
    compileOnly("com.google.guava:guava:33.4.0-jre")
    compileOnly("com.google.code.gson:gson:2.12.1")
    compileOnly("org.joml:joml:1.10.8")
    compileOnly("org.projectlombok:lombok:1.18.30")

    annotationProcessor("org.projectlombok:lombok:1.18.30")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.30")

    testImplementation("org.junit.jupiter:junit-jupiter:5.11.3")
    testImplementation("com.google.code.gson:gson:2.12.1")
    testImplementation("org.joml:joml:1.10.8")
    testImplementation("com.google.guava:guava:33.4.0-jre")
    testImplementation("org.xerial:sqlite-jdbc:3.47.2.0")
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(21)
}

tasks {
    jar {
        dependsOn(project(":datagenerator").getTasksByName("run", false))
    }

    test {
        useJUnitPlatform()
    }
}

sourceSets {
    main {
        resources.srcDir(file("src/autogenerated/resources"))
    }
}





