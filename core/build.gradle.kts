buildscript {
    configurations.all {
        resolutionStrategy {
            force("com.fasterxml.jackson.core:jackson-core:2.18.2")
        }
    }
}

plugins {
    `tbp-module`
}

repositories {
    mavenCentral()
    maven("https://jitpack.io")
    maven("https://storehouse.okaeri.eu/repository/maven-public/")
}

dependencies {
    api(project(":api"))

    // libraries
    compileOnly(libs.sqlite.jdbc)
    compileOnly(libs.guava)
    compileOnly(libs.gson)
    compileOnly(libs.joml)
    compileOnly(libs.adventure.api)
    compileOnly(libs.adventure.text.minimessage)
    api(libs.okaeri)
    implementation(libs.simple.yaml)
    implementation(libs.hikaricp)
    implementation(libs.exp4j)

    // other
    compileOnly(libs.jetbrains.annotations)
    compileOnly(libs.lombok)
    annotationProcessor(libs.lombok)

    // test
    testImplementation(libs.junit.jupiter)
    testRuntimeOnly(libs.junit.platform.launcher)

    testImplementation(libs.gson)
    testImplementation(libs.joml)
    testImplementation(libs.guava)
    testImplementation(libs.sqlite.jdbc)

    testAnnotationProcessor(libs.lombok)
}

tasks {
    processResources {
        dependsOn(project(":datagenerator").getTasksByName("run", false))
    }

    test {
        useJUnitPlatform()
    }
}

sourceSets {
    main {
        resources.srcDir(file("src/autogenerated/resources"))
    }
}





